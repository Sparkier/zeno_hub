version: "3"
name: zeno-test
services:
  frontend:
    container_name: zeno-frontend-test
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "5173:5173"
    environment:
      ZENO_USER_POOL_AUTH_REGION: ${ZENO_USER_POOL_AUTH_REGION}
      ZENO_USER_POOL_CLIENT_ID: ${ZENO_USER_POOL_CLIENT_ID}
      ZENO_USER_POOL_ID: ${ZENO_USER_POOL_ID}
      PUBLIC_BACKEND_ENDPOINT: http://zeno-backend-test:8000
    command: npm run preview -- --port 5173 --host 0.0.0.0
  backend:
    container_name: zeno-backend-test
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      BACKEND_HOST: 0.0.0.0
      BACKEND_PORT: 8000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: zeno
      DB_USER: myuser
      DB_PASSWORD: mypassword
      ZENO_USER_POOL_AUTH_REGION: ${ZENO_USER_POOL_AUTH_REGION}
      ZENO_USER_POOL_CLIENT_ID: ${ZENO_USER_POOL_CLIENT_ID}
      ZENO_USER_POOL_ID: ${ZENO_USER_POOL_ID}
    command: poetry run uvicorn --factory zeno_backend.server:get_server --host 0.0.0.0 --timeout-keep-alive 75
  postgres:
    container_name: zeno-postgres-test
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: zeno
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      # Use a different port to avoid clashes with local postgres
      - "5431:5432"
