name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install modules
        run: cd frontend && npm i
      - name: linting
        run: cd frontend && npm run lint

  check-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install modules
        run: cd frontend && npm i
      - name: Svelte check
        run: cd frontend && npm run check

  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
        with:
          src: "backend/zeno_backend/"
      - uses: chartboost/ruff-action@v1
        with:
          args: "format --check"
          src: "backend/zeno_backend/"

  typecheck-python:
    runs-on: ubuntu-latest
    steps:
      - uses: jakebailey/pyright-action@v1

  test-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-in-project: true
          virtualenvs-path: ~/.virtualenvs

      - name: Cache Poetry virtualenv
        uses: actions/cache@v3.3.2
        id: cache-poetry
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install Poetry Dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          cd backend
          poetry install --no-interaction --no-root

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up secrets
        run: echo "${{ secrets.ZENO_HUB_ENV }}" > frontend/.env
      - name: Set up docker containers
        run: docker-compose up -d
      - name: Run tests
        run: cd frontend && npm run test
